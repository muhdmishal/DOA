<?php

/**
 * @file
 * Contains nocaptcha_recaptcha.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function nocaptcha_recaptcha_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the nocaptcha_recaptcha module.
    case 'help.page.nocaptcha_recaptcha':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides integration with Google&#039;s nocaptcha recaptcha on top of Captcha API.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_captcha().
 */
function nocaptcha_recaptcha_captcha($op, $captcha_type = '', $captcha_sid = NULL) {
  switch ($op) {
    case 'list':
      return ['nocaptcha_recaptcha'];
      break;

    case 'generate':
      if ($captcha_type == 'nocaptcha_recaptcha') {
        // In maintenance mode, the image CAPTCHA does not work because the request
        // for the image itself won't succeed (only ?q=user is permitted for
        // unauthenticated users). We fall back to the Math CAPTCHA in that case.
        if (defined('MAINTENANCE_MODE') && \Drupal::currentUser()->isAnonymous()) {
          return captcha_captcha('generate', 'Math');
        }

        // This field is mandatory as per catpcha API, but not required by this module.
        $result['solution'] = 'test';

        $result['form']['nocaptcha_recaptcha'] = \Drupal::service('nocaptcha_recaptcha.generator')->generate();
        
        $result['captcha_validate'] = 'nocaptcha_recaptcha_validate';
        \Drupal::service('page_cache_kill_switch')->trigger();

        return $result;
      }
      break;
  }
}

/**
 * Implements hook_page_attachments_alter()
 *
 * @param $page
 */
function nocaptcha_recaptcha_page_attachments_alter(&$page) {
  include_once DRUPAL_ROOT . '/core/includes/install.inc';
  $requirements = drupal_check_module('nocaptcha_recaptcha');

  // Don't init if we're on admin pages or requirements not met.
  if (!$requirements) {
    return;
  }

  $page['#attached']['library'][] = 'nocaptcha_recaptcha/nocaptcha_recaptcha.api';
}

/**
 * Callback for captcha validation
 *
 * @param $solution
 * @param $response
 * @param $element
 * @param $form_state
 * @return mixed
 */
function nocaptcha_recaptcha_validate($solution, $response, $element, $form_state) {
  $submittedValues = $form_state->getUserInput();
  $g_recaptch_response = $submittedValues['g-recaptcha-response'];
  return \Drupal::service('nocaptcha_recaptcha.validator')->validate($g_recaptch_response);
}